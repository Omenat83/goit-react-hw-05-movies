{"version":3,"file":"static/js/171.13b5e59e.chunk.js","mappings":"kQAEaA,EAAmBC,EAAAA,GAAAA,IAAH,sGAOhBC,EAAYD,EAAAA,GAAAA,GAAH,6DAITE,EAAWF,EAAAA,GAAAA,EAAH,iE,SCiCrB,EA1CqB,SAAC,GAOf,IANLG,EAMI,EANJA,OACAC,EAKI,EALJA,MACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACAC,EACI,EADJA,UAEMC,EAAO,IAAIC,KAAKL,GAAMM,iBACtBC,EAAmBC,KAAKC,MAAgB,GAAVR,GAC9BS,EAASP,EAAUQ,KAAI,SAAAC,GAAG,OAAIA,EAAIC,IAAR,IAAcC,KAAK,MAEnD,OACE,UAACpB,EAAD,YACE,gBACEqB,IAAG,yCAAoCjB,GACvCkB,IAAI,YAGN,4BACE,UAACpB,EAAD,WACGG,EADH,KACYK,EADZ,QAGA,UAACP,EAAD,0BAAuBU,EAAvB,QACA,sCACA,SAACV,EAAD,UAAWK,KACX,oCACA,SAACL,EAAD,UAAWa,SAIlB,E,oBCjCKO,EAAU,mCACVC,EAAU,sCAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,kGAE2BC,MAAM,GAAD,OAAIH,GAAJ,OAAcE,EAAd,oBAAgCH,IAFhE,WAEUK,EAFV,QAGkBC,GAHlB,sBAG4B,IAAIC,MAAM,6BAHtC,uBAIuBF,EAASG,OAJhC,cAIUC,EAJV,yBAKWA,GALX,kCAOIC,EAAAA,GAAAA,MAAY,KAAMC,SAPtB,iFAWA,I,QAAA,EAbA,SAEiC,GAAlBT,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,oBCFFU,GAAWlC,EAAAA,EAAAA,IAAOmC,EAAAA,GAAPnC,CAAH,wMAaRoC,EAAoBpC,EAAAA,GAAAA,GAAH,8EAIjBqC,GAAcrC,EAAAA,EAAAA,IAAOmC,EAAAA,GAAPnC,CAAH,wGASXsC,EAAUtC,EAAAA,GAAAA,GAAH,yCC2CpB,EA3DyB,WAAO,IAAD,IAC7B,GAAkCuC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAEhDC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,WAAmBR,GAAnB,uFACwBlB,EAAkBkB,GAD1C,OACQS,EADR,OAEEV,EAAaU,GAFf,2CAHc,6DACdC,CAAIV,EAML,GAAE,CAACA,IAEJ,IACEW,EAMEb,EANFa,YACAC,EAKEd,EALFc,eACAC,EAIEf,EAJFe,aACAC,EAGEhB,EAHFgB,aACAjD,EAEEiC,EAFFjC,SACAQ,EACEyB,EADFzB,OAGF,OACE,4BACE,UAACmB,EAAD,CAAUuB,GAAIX,EAASY,QAAvB,WACE,SAAC,MAAD,IADF,aAKClB,IACC,iCACE,SAAC,EAAD,CACErC,OAAQkD,EACRjD,MAAOkD,EACPjD,KAAMkD,EACNjD,QAASkD,EACTjD,SAAUA,EACVC,UAAWO,KAEb,UAACqB,EAAD,YACE,qDACA,SAACE,EAAD,WACE,SAACD,EAAD,CAAaoB,GAAG,OAAhB,qBAEF,SAACnB,EAAD,WACE,SAACD,EAAD,CAAaoB,GAAG,UAAhB,2BAGJ,SAAC,EAAAE,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAMX,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","fetch/filmDetails.js","pages/MovieDetailsPage.styled.js","pages/MovieDetailsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const DetailsContainer = styled.div`\ndisplay: flex;\npadding: 20px 0;\ngap: 40px;\nborder-bottom: 2px solid grey;\n`\n\nexport const FilmTitle = styled.h2`\nfont-weight: 500;\nfont-size: 36px;\n`\nexport const FilmInfo = styled.p`\nmargin-top: 20px;\nmargin-bottom: 20px;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DetailsContainer, FilmTitle, FilmInfo } from './MovieDetails.styled';\n\nconst MovieDetails = ({\n  poster,\n  title,\n  date,\n  average,\n  overview,\n  genresObj,\n}) => {\n  const year = new Date(date).getUTCFullYear();\n  const averageInPercent = Math.round(average * 10);\n  const genres = genresObj.map(gen => gen.name).join(', ');\n\n  return (\n    <DetailsContainer>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${poster}`}\n        alt=\"poster\"\n        // width=\"480\"\n      />\n      <div>\n        <FilmTitle>\n          {title} ({year})\n        </FilmTitle>\n        <FilmInfo>User Score: {averageInPercent}%</FilmInfo>\n        <h3>Owerview</h3>\n        <FilmInfo>{overview}</FilmInfo>\n        <h3>Genres</h3>\n        <FilmInfo>{genres}</FilmInfo>\n      </div>\n    </DetailsContainer>\n  );\n};\n\nMovieDetails.propTypes = {\n  poster: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  average: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genresObj: PropTypes.array,\n};\n\nexport default MovieDetails;\n","import { toast } from 'react-toastify';\n\nconst API_KEY = '8565520cd492abb719a0c7276e0ff11e';\nconst API_URL = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchMovieDetails(filmId) {\n  try {\n    const response = await fetch(`${API_URL}${filmId}?api_key=${API_KEY}`);\n    if (!response.ok) throw new Error('Sorry. Try again later :(');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n}\n\nexport default fetchMovieDetails;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  gap: 7px;\n  align-items: center;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  font-size: 22px;\n\n  &:hover {\n    color: red;\n  }\n`;\nexport const SectionsContainer = styled.ul`\n  padding: 20px 0;\n  border-bottom: 2px solid grey;\n`;\nexport const SectionLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n\n  &:hover {\n    color: red;\n  }\n`;\n\nexport const Section = styled.li`\npadding: 5px 0;\n`\n","import MovieDetails from 'components/MovieDetails/MovieDetails';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport fetchMovieDetails from 'fetch/filmDetails';\nimport { BsFillSkipBackwardFill } from 'react-icons/bs';\nimport {\n  BackLink,\n  SectionsContainer,\n  SectionLink,\n  Section,\n} from './MovieDetailsPage.styled';\nimport { Suspense } from 'react';\n\nconst MovieDetailsPage = () => {\n  const [usersFilm, setUsersFilm] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    foo(movieId);\n\n    async function foo(movieId) {\n      const details = await fetchMovieDetails(movieId);\n      setUsersFilm(details);\n    }\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = usersFilm;\n\n  return (\n    <div>\n      <BackLink to={backLink.current}>\n        <BsFillSkipBackwardFill />\n        Go back\n      </BackLink>\n\n      {usersFilm && (\n        <>\n          <MovieDetails\n            poster={poster_path}\n            title={original_title}\n            date={release_date}\n            average={vote_average}\n            overview={overview}\n            genresObj={genres}\n          />\n          <SectionsContainer>\n            <h3>Additional information:</h3>\n            <Section>\n              <SectionLink to=\"cast\">Cast</SectionLink>\n            </Section>\n            <Section>\n              <SectionLink to=\"reviews\">Reviews</SectionLink>\n            </Section>\n          </SectionsContainer>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["DetailsContainer","styled","FilmTitle","FilmInfo","poster","title","date","average","overview","genresObj","year","Date","getUTCFullYear","averageInPercent","Math","round","genres","map","gen","name","join","src","alt","API_KEY","API_URL","fetchMovieDetails","filmId","fetch","response","ok","Error","json","data","toast","message","BackLink","Link","SectionsContainer","SectionLink","Section","useState","usersFilm","setUsersFilm","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","details","foo","poster_path","original_title","release_date","vote_average","to","current","Suspense","fallback"],"sourceRoot":""}