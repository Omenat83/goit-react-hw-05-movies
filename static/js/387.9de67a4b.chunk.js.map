{"version":3,"file":"static/js/387.9de67a4b.chunk.js","mappings":"wQAEaA,E,QAAgBC,GAAAA,GAAH,4E,SCsC1B,EAlCa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC0BC,EAAAA,EAAAA,GAAoBH,EAAS,WADvD,OACQI,EADR,OAEEL,EAAQK,EAAUN,MAFpB,4CADc,uBAAC,WAAD,wBAMdO,EACD,GAAE,CAACL,KAGF,8BACGF,IACC,SAACH,EAAD,UACGG,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,2BACE,gBACEC,IAAG,yCAAoCH,GACvCI,IAAG,qCAAgCH,EAAhC,KACHI,MAAM,SAER,uBAAIJ,KACJ,uCAAeC,OAPRH,EADD,OAenB,C,kECpCKO,EAAU,mCACVC,EAAU,sCAEDZ,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAmCa,EAAQC,GAA3C,kGAE2BC,MAAM,GAAD,OACvBH,GADuB,OACbC,EADa,YACHC,EADG,oBACgBH,IAHhD,WAEUK,EAFV,QAKkBC,GALlB,sBAK4B,IAAIC,MAAM,6BALtC,uBAMuBF,EAASG,OANhC,cAMUC,EANV,yBAOWA,GAPX,kCASIC,EAAAA,GAAAA,MAAY,KAAMC,SATtB,iFAaA,IAfA,SAEmC,EAApBtB,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,uBCLf,SAASuB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","fetch/filmDetailsSections.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastContainer = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 10px\n`","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React, { useEffect, useState } from 'react';\nimport fetchDetailsSection from 'fetch/filmDetailsSections';\nimport { useParams } from 'react-router-dom';\nimport { CastContainer } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function foo() {\n      const filmsCast = await fetchDetailsSection(movieId, 'credits');\n      setCast(filmsCast.cast);\n    }\n\n    foo();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <CastContainer>\n          {cast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={`Sorry, we haven't photo of ${name} `}\n                width=\"150\"\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </CastContainer>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { toast } from 'react-toastify';\n\nconst API_KEY = '8565520cd492abb719a0c7276e0ff11e';\nconst API_URL = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchDetailsSection(filmId, section) {\n  try {\n    const response = await fetch(\n      `${API_URL}${filmId}/${section}?api_key=${API_KEY}`\n    );\n    if (!response.ok) throw new Error('Sorry. Try again later :(');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n}\n\nexport default fetchDetailsSection;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["CastContainer","styled","useState","cast","setCast","movieId","useParams","useEffect","fetchDetailsSection","filmsCast","foo","map","id","profile_path","name","character","src","alt","width","API_KEY","API_URL","filmId","section","fetch","response","ok","Error","json","data","toast","message","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}