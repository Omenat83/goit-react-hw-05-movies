{"version":3,"file":"static/js/45.e6bc2d55.chunk.js","mappings":"kTAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4FAORE,EAAiBF,EAAAA,GAAAA,GAAH,2CAIdG,EAAaH,EAAAA,GAAAA,KAAH,8DAIVI,EAAYJ,EAAAA,GAAAA,MAAH,+EAKTK,EAAaL,EAAAA,GAAAA,OAAH,sO,uJCrBjBM,EAAU,mCACVC,EAAU,4CAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,kGAE2BC,MAAM,GAAD,OACvBH,EADuB,oBACJD,EADI,kBACaG,EADb,YAFhC,WAEUE,EAFV,QAKkBC,GALlB,sBAK4B,IAAIC,MAAM,6BALtC,uBAMuBF,EAASG,OANhC,cAMUC,EANV,yBAOWA,GAPX,kCASIC,EAAAA,GAAAA,MAAY,KAAMC,SATtB,iFAaA,MAfA,SAE8B,GAAfT,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,6BCyDf,EAjDmB,WAAO,IAAD,EACvB,GAAgDU,EAAAA,EAAAA,UAAS,IAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAO,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,IAG5CC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGACsBpB,EAAekB,GADrC,OACQG,EADR,OAEET,EAAoBS,EAAMC,SAF5B,4CADc,sBAMTJ,GANU,WAAD,wBAOdK,EACD,GAAE,CAACL,IAYJ,OACE,4BACE,UAAC,KAAD,CAAYM,SAXK,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACmB,KAAhCD,EAAKE,UAAUC,MAAMC,OACvBvB,EAAAA,GAAAA,KAAW,uBACNS,EAAe,CAAEe,MAAOL,EAAKE,UAAUC,QAC9CH,EAAKM,OACN,EAIG,WACE,SAAC,KAAD,CAAWC,KAAK,OAAOC,KAAK,eAC5B,SAAC,KAAD,CAAYD,KAAK,SAAjB,wBAEDvB,IACC,SAAC,KAAD,UACGA,EAAiByB,KAAI,SAAAC,GAAI,OACxB,yBACE,UAAC,KAAD,CAAUC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAM5B,GAA3C,WACE,SAAC,MAAD,CAAe6B,KAAK,SACnBL,EAAKM,UAHDN,EAAKE,GADU,QAYnC,C","sources":["pages/HomeMoviePages.styled.js","fetch/formInput.js","pages/MoviesPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const FilmLink = styled(Link)`\nline-height: 1.7;\ndisplay: flex;\ngap: 5px;\nalign-items: center;\n`;\n\nexport const FilmsComtainer = styled.ul`\nmargin-top: 15px;\n`\n\nexport const SearchForm = styled.form`\n  padding: 10px 0;\n  display: flex;\n`;\nexport const FormInput = styled.input`\n  padding: 3px;\n  font-size: 18px;\n  outline: none;\n`;\nexport const FormButton = styled.button`\n  font-size: 16px;\n  outline: none;\n  opacity: 0.8;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    cursor: pointer;\n    background-color: lightgray;\n    opacity: 1;\n  }\n`;","import { toast } from 'react-toastify';\n\nconst API_KEY = '8565520cd492abb719a0c7276e0ff11e';\nconst API_URL = 'https://api.themoviedb.org/3/search/movie';\n\nasync function fetchFormQuery(filmQuery) {\n  try {\n    const response = await fetch(\n      `${API_URL}?api_key=${API_KEY}&query=${filmQuery}&page=1`\n    );\n    if (!response.ok) throw new Error('Sorry. Try again later :(');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n}\n\nexport default fetchFormQuery;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport fetchFormQuery from 'fetch/formInput';\nimport { toast } from 'react-toastify';\nimport { BiCameraMovie } from 'react-icons/bi';\nimport {\n  FilmLink,\n  FilmsComtainer,\n  SearchForm,\n  FormInput,\n  FormButton,\n} from './HomeMoviePages.styled';\n\nconst MoviesPage = () => {\n  const [queryCollections, setQueryCollecrions] = useState('');\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const filmUrl = searchQuery.get('query') ?? '';\n\n  // запит на апі по назві фільму\n  useEffect(() => {\n    async function foo() {\n      const films = await fetchFormQuery(filmUrl);\n      setQueryCollecrions(films.results);\n    }\n\n    if (!filmUrl) return;\n    foo();\n  }, [filmUrl]);\n\n  // зміна пошукового запиту після сабміту форми\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    if (form.filmInput.value.trim() === '') {\n      toast.warn('Enter correct query');\n    } else setSearchQuery({ query: form.filmInput.value });\n    form.reset();\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSubmit}>\n        <FormInput type=\"text\" name=\"filmInput\" />\n        <FormButton type=\"submit\">Search </FormButton>\n      </SearchForm>\n      {queryCollections && (\n        <FilmsComtainer>\n          {queryCollections.map(film => (\n            <li key={film.id}>\n              <FilmLink to={`${film.id}`} state={{ from: location }}>\n                <BiCameraMovie size=\"12px\" />\n                {film.title}\n              </FilmLink>\n            </li>\n          ))}\n        </FilmsComtainer>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["FilmLink","styled","Link","FilmsComtainer","SearchForm","FormInput","FormButton","API_KEY","API_URL","fetchFormQuery","filmQuery","fetch","response","ok","Error","json","data","toast","message","useState","queryCollections","setQueryCollecrions","location","useLocation","useSearchParams","searchQuery","setSearchQuery","filmUrl","get","useEffect","films","results","foo","onSubmit","evt","preventDefault","form","currentTarget","filmInput","value","trim","query","reset","type","name","map","film","to","id","state","from","size","title"],"sourceRoot":""}