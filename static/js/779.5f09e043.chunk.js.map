{"version":3,"file":"static/js/779.5f09e043.chunk.js","mappings":"oRAEaA,EAAgBC,EAAAA,GAAAA,EAAH,6DAIbC,EAAWD,EAAAA,GAAAA,GAAH,yC,SC+BrB,EAhCgB,WACd,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC4BC,EAAAA,EAAAA,GAAoBH,EAAS,WADzD,UAEqC,KAD7BI,EADR,QAEkBC,QAAQC,OAF1B,yCAGWP,EAAU,6CAHrB,OAIEA,EAAUK,EAAYC,SAJxB,4CADc,uBAAC,WAAD,wBAQdE,EACD,GAAE,CAACP,KAGF,gCACqB,kBAAXF,IAAuB,uBAAIA,IAChB,kBAAXA,IACN,wBACGA,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,UAACf,EAAD,YACE,SAACF,EAAD,UAAgBe,KAChB,uBAAIC,MAFSC,EADL,QAUrB,C,kECjCKC,EAAU,mCACVC,EAAU,sCAEDV,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAmCW,EAAQC,GAA3C,kGAE2BC,MAAM,GAAD,OACvBH,GADuB,OACbC,EADa,YACHC,EADG,oBACgBH,IAHhD,WAEUK,EAFV,QAKkBC,GALlB,sBAK4B,IAAIC,MAAM,6BALtC,uBAMuBF,EAASG,OANhC,cAMUC,EANV,yBAOWA,GAPX,kCASIC,EAAAA,GAAAA,MAAY,KAAMC,SATtB,iFAaA,IAfA,SAEmC,EAApBpB,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,uBCLf,SAASqB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","fetch/filmDetailsSections.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewsAuthor = styled.p`\nfont-weight: 500;\nfont-size: 20px;\n`\nexport const ReviewLi = styled.li`\npadding: 7px 0;\n`","import React, { useEffect, useState } from 'react';\nimport fetchDetailsSection from 'fetch/filmDetailsSections';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsAuthor, ReviewLi } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [review, setReview] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function foo() {\n      const filmsReview = await fetchDetailsSection(movieId, 'reviews');\n      if (filmsReview.results.length === 0)\n        return setReview('We don`t have any reviews for this movie');\n      setReview(filmsReview.results);\n    }\n\n    foo();\n  }, [movieId]);\n\n  return (\n    <>\n      {typeof review === 'string' && <p>{review}</p>}\n      {typeof review !== 'string' && (\n        <ul>\n          {review.map(({ author, content, id }) => (\n            <ReviewLi key={id}>\n              <ReviewsAuthor>{author}</ReviewsAuthor>\n              <p>{content}</p>\n            </ReviewLi>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import { toast } from 'react-toastify';\n\nconst API_KEY = '8565520cd492abb719a0c7276e0ff11e';\nconst API_URL = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchDetailsSection(filmId, section) {\n  try {\n    const response = await fetch(\n      `${API_URL}${filmId}/${section}?api_key=${API_KEY}`\n    );\n    if (!response.ok) throw new Error('Sorry. Try again later :(');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n}\n\nexport default fetchDetailsSection;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["ReviewsAuthor","styled","ReviewLi","useState","review","setReview","movieId","useParams","useEffect","fetchDetailsSection","filmsReview","results","length","foo","map","author","content","id","API_KEY","API_URL","filmId","section","fetch","response","ok","Error","json","data","toast","message","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}